<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tortoise.quake.dao.UserRoleMapper">

	<resultMap id="BaseResultMap" type="com.tortoise.quake.model.UserRoleEntity">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="role_id" property="roleId" jdbcType="BIGINT" />
	</resultMap>

	<sql id="Base_Column_List">
		id,user_id,role_id
	</sql>

	<sql id="Alias_Column_List">
		t.id,t.user_id,t.role_id
	</sql>

	<sql id="Base_Condition">
		<where>
		   <if test="userId != null">and t.user_id = #{userId,jdbcType=BIGINT}</if>
		   <if test="roleId != null">and t.role_id = #{roleId,jdbcType=BIGINT}</if>
		   <!-- 自定义 -->
		</where>
	</sql>

	<!-- 通过复合条件查询 -->
	<select id="select" resultMap="BaseResultMap" parameterType="java.util.HashMap">
		select
		<include refid="Alias_Column_List" />
		from sys_user_role t
		<include refid="Base_Condition" />
	</select>

	<!-- 统计 -->
	<select id="count" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		select count(0)
		from sys_user_role t
		<include refid="Base_Condition" />
	</select>

	<!-- 通过主键查询对象 -->
	<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from sys_user_role
		where id = #{id,jdbcType=BIGINT}
	</select>

	<!-- 通过主键删除对象 -->
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from sys_user_role
		where id = #{id,jdbcType=BIGINT}
	</delete>

	<!-- 新增对象(所有字段) -->
	<insert id="insertAllField" parameterType="com.tortoise.quake.model.UserRoleEntity">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>

		insert into sys_user_role(
			<include refid="Base_Column_List" />
		)
		values(
			#{id,jdbcType=BIGINT},
			#{userId,jdbcType=BIGINT},
			#{roleId,jdbcType=BIGINT}
		)
	</insert>

	<!-- 新增对象(部分字段) -->
	<insert id="insert" parameterType="com.tortoise.quake.model.UserRoleEntity">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>

		insert into sys_user_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="userId != null">user_id,</if>
			<if test="roleId != null">role_id,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">id,</if>
			<if test="userId != null">#{userId,jdbcType=BIGINT},</if>
			<if test="roleId != null">#{roleId,jdbcType=BIGINT},</if>
		</trim>
	</insert>

	<!-- 修改对象 (部分字段)-->
	<update id="update" parameterType="com.tortoise.quake.model.UserRoleEntity">
		update sys_user_role
		<set>
			<if test="userId != null">user_id = #{userId,jdbcType=BIGINT},</if>
			<if test="roleId != null">role_id = #{roleId,jdbcType=BIGINT},</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>

	<!-- 修改对象(所有字段) -->
	<update id="updateAllField" parameterType="com.tortoise.quake.model.UserRoleEntity">
		update sys_user_role
		set
			user_id = #{userId,jdbcType=BIGINT},
			role_id = #{roleId,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>

	<!-- 批量插入(所有字段) -->
	<insert id="batchInsert" parameterType="java.util.List">
		insert into sys_user_role(
			<include refid="Base_Column_List" />
		)
		values
		<foreach collection="list" index="index" item="item" separator=",">
		(
			#{item.id}
			<choose><when test="item.userId != null">,#{item.userId}</when><otherwise>,default</otherwise></choose>
			<choose><when test="item.roleId != null">,#{item.roleId}</when><otherwise>,default</otherwise></choose>
		)
		</foreach>
	</insert>

	<!-- 批量插入或更新(所有字段) -->
	<update id="batchInsertOrUpdate" parameterType="java.util.List">
		insert into sys_user_role(
			<include refid="Base_Column_List" />
		)
		values
		<foreach collection="list" index="index" item="item" separator=",">
		(
			#{item.id}
			<choose><when test="item.userId != null">,#{item.userId}</when><otherwise>,default</otherwise></choose>
			<choose><when test="item.roleId != null">,#{item.roleId}</when><otherwise>,default</otherwise></choose>
		)
		</foreach>
		on duplicate key update user_id = values(user_id), role_id = values(role_id)
	</update>

	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="java.util.List">
		delete from sys_user_role where id in 
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- 根据用户ID删除用户角色  -->
	<delete id="deleteByUserId" parameterType="java.lang.Long">
		delete from sys_user_role
		where user_id = #{userId,jdbcType=BIGINT}
	</delete>

	<!-- 根据用户ID列表批量删除用户角色  -->
	<delete id="batchDeleteByUserIdList" parameterType="java.util.List">
		delete from sys_user_role where user_id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- 根据角色ID列表批量删除用户角色  -->
	<delete id="batchDeleteByRoleIdList" parameterType="java.util.List">
		delete from sys_user_role where role_id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>

	<!-- 自定义 -->
</mapper>
